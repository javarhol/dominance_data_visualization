filter(stability == "stable")
#make stability histograms of only stable animals
males <- stability %>%
filter(sex == "Male")
females <- stability %>%
filter(sex == "Female")
male_hist <- ggplot(males, aes(cage_rank)) +
geom_bar() +
geom_hline(yintercept = 1:7,
color = "white", linewidth = 1) +
scale_x_reverse() + coord_flip() +
xlab("") + ylab("")+
theme_nothing()
female_hist <- ggplot(females, aes(cage_rank)) +
geom_bar() +
geom_hline(yintercept = 1:7,
color = "white", linewidth = 1) +
scale_x_reverse() + coord_flip() +
theme_nothing()
#geom_hline, removes the need for an axis, just make sure that the number of lines (e.g. 1:7) is equal to the highest number of animals for a specific rank. In this case, there were 7 female alphas that remained stable.
#plot everything in panels
plot_grid(male_plot, male_hist, female_plot + theme(axis.text.y = element_blank()), female_hist, ncol = 4, align = "h", rel_widths = c(1.2, .2, 1, .2))
#subset males and females
males <- filter(ranks_per_week, sex == "Male")
females <- filter(ranks_per_week, sex == "Female")
male_plot <- ggplot(males, aes(day, rank, group = animal_id, color = as.factor(cage_rank), label = animal_id)) +
geom_line(linewidth = 1, aes(y=jitter(rank, .5))) +
scale_x_discrete(labels = c("d1" = 1, "d2" = 2, "d3" = 3), expand = c(0,0)) +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon"), expand = c(0,0)) +
scale_color_social() + guides(colour="none") +
ggtitle("Males") +
xlab("Week") + ylab("") +
theme_minimal_vgrid()
female_plot <- ggplot(females, aes(day, rank, group = animal_id, color = as.factor(cage_rank), label = animal_id)) +
geom_line(linewidth = 1, aes(y=jitter(rank, .5))) +
scale_x_discrete(labels = c("d1" = 1, "d2" = 2, "d3" = 3), expand = c(0,0)) +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon"), expand = c(0,0)) +
scale_color_social() + guides(colour="none") +
ggtitle("Females") +
xlab("Week") + ylab("") +
theme_minimal_vgrid()
#make stability dataset
stability <- ranks_per_week %>%
select(cage_id, animal_id, sex, cage_rank, day, rank) %>%
pivot_wider(names_from = day, values_from = rank) %>%
mutate(stability = case_when(
d1 == d2 & d2 == d3 ~ "stable",
d1 != d2 ~ "unstable",
d1 != d3 ~ "unstable",
d2 != d3 ~ "unstable"
)) %>%
filter(stability == "stable")
#make stability histograms of only stable animals
males <- stability %>%
filter(sex == "Male")
females <- stability %>%
filter(sex == "Female")
male_hist <- ggplot(males, aes(cage_rank)) +
geom_bar() +
geom_hline(yintercept = 1:7,
color = "white", linewidth = 1) +
scale_x_reverse() + coord_flip() +
xlab("") + ylab("")+
theme_nothing()
female_hist <- ggplot(females, aes(cage_rank)) +
geom_bar() +
geom_hline(yintercept = 1:7,
color = "white", linewidth = 1) +
scale_x_reverse() + coord_flip() +
theme_nothing()
#geom_hline, removes the need for an axis, just make sure that the number of lines (e.g. 1:7) is equal to the highest number of animals for a specific rank. In this case, there were 7 female alphas that remained stable.
#plot everything in panels
plot_grid(male_plot, male_hist, female_plot + theme(axis.text.y = element_blank()), female_hist, ncol = 4, align = "h", rel_widths = c(1.2, .2, 1, .2))
ggplot(ranks_per_week, aes(day, rank, group = animal_id, color = sex)) +
geom_line() +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon")) +
scale_color_social() +
facet_wrap(~cage_id)
ggplot(ranks_per_week, aes(day, rank, group = animal_id, color = sex)) +
geom_line() +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon")) +
scale_color_social() +
facet_wrap(~cage_id) + theme_cowplot()
ggplot(ranks_per_week, aes(day, rank, group = animal_id, color = sex)) +
geom_line() +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon")) +
scale_color_social() +
facet_wrap(~cage_id)
ggplot(ranks_per_week, aes(day, rank, group = animal_id, color = stab_cat)) +
geom_line() +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon")) +
scale_color_social() +
labs(color = "Stability \nCategory") +
facet_wrap(~cage_id)
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
View(ds_scores)
library(dplyr)
library(tidyr)
library(compete) #devtools::install_github('jalapic/compete')
#import data
tube_test_outcomes <- read.csv("data/tube_test_outcomes.csv", nrows=546)
head(tube_test_outcomes)
#1.concatenate cage_id and test_day
tube_test_outcomes <- tube_test_outcomes %>%
select(test_day,cage_id, opponent_1, opponent_2, t1, t2, t3, t4) %>%
within(cage_day <- paste(cage_id, test_day, sep = "-d")) %>%
select(opponent_1, opponent_2, t1, t2, t3, t4, cage_day, cage_id)
#2.rename opponent data to animal_id
tube_test_outcomes$opponent_1 <- paste(tube_test_outcomes$cage_id, tube_test_outcomes$opponent_1, sep="-")
tube_test_outcomes$opponent_2 <- paste(tube_test_outcomes$cage_id, tube_test_outcomes$opponent_2, sep="-")
#3.make a long dataset
long_data <- data.frame(tube_test_outcomes[1:2], tube_test_outcomes[7:8], stack(tube_test_outcomes[3:6]))
long_data <- long_data[,c("opponent_1", "opponent_2", "values", "ind", "cage_day", "cage_id")]
head(long_data)
#split up long_data by day_id
day_list <- split(long_data, as.factor(long_data$cage_day))
#splitup long_dat by Cage (compound all 3 trials)
cage_list <- split(long_data, as.factor(long_data$cage_id))
#make a custom function that formats the table into a win-loss matrix and then runs the ds function.
get_ds <- function(x){
matrix <- get_wl_matrix(x, ties="keep")
david_scores <- as.data.frame(ds(matrix, norm=FALSE, type = "D"))
}
#get david scores for each item in the list
ds_per_week <- do.call(rbind, lapply(day_list, get_ds))
#tidy data
ds_per_week <- ds_per_week %>%
rename(ds = `ds(matrix, norm = FALSE, type = "D")`) %>%
mutate(cage_day = rownames(.)) %>%
separate_wider_delim(cage_day, delim = ".", names = c("cage_day", "animal_id")) %>%
separate_wider_delim(cage_day, delim = "-", names = c("cage_id", "day")) %>%
select(cage_id, animal_id, day, ds)
write.csv(ds_per_week, "data/ds_per_week.csv")
head(ds_per_week)
#get david scores for each item in the list
ds_per_cage <- do.call(rbind, lapply(cage_list, get_ds))
#tidy data
ds_per_cage <- ds_per_cage %>%
rename(ds = `ds(matrix, norm = FALSE, type = "D")`) %>%
mutate(cage_animal_id = rownames(.)) %>%
separate_wider_delim(cage_animal_id, delim = ".", names = c("cage_id", "animal_id")) %>%
select(cage_id, animal_id, ds)
write.csv(ds_per_week, "data/ds_per_cage.csv")
head(ds_per_cage)
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
View(ds_scores)
View(ds_per_cage)
write.csv(ds_per_cage, "data/ds_per_cage.csv")
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
View(ds_scores)
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
View(ds_scores)
ds_scores <- left_join(ds_scores, sex_id, by = "animal_id")
inventory1 <- read.csv("data/animal_inventory1.csv")
sex_id1 <- inventory1 %>%
select(animal_id, sex)
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
View(ds_scores)
head(ds_scores)
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ggplot(ds_scores, aes(stab_cat, ds))+
geom_jitter()
ggplot(ds_scores, aes(stab_cat, ds))+
geom_dotplot()
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ggplot(ds_scores, aes(stab_cat, ds))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2)
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ranks_per_cage <- ranks_per_cage %>%
select(animal_id, rank) %>%
rename(cage_rank = rank)
ranks_per_cage <- read.csv("data/ranks_per_cage.csv")
ranks_per_cage <- ranks_per_cage %>%
select(animal_id, rank) %>%
rename(cage_rank = rank)
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ggplot(ds_scores, aes(stab_cat, ds))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2)
ggplot(ds_scores, aes(stab_cat, ds, fill = rank))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2)
View(ds_scores)
ggplot(ds_scores, aes(stab_cat, ds, fill = cage_rank))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2)
ggplot(ds_scores, aes(stab_cat, ds, color = cage_rank))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2)
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ggplot(ds_scores, aes(stab_cat, ds, fill = cage_rank))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2)
#go back to other tutorial and get normDS
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ggplot(ds_scores, aes(stab_cat, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2)
#go back to other tutorial and get normDS
ggplot(ds_scores, aes(stab_cat, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
scale_fill_social()
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ggplot(ds_scores, aes(stab_cat, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
scale_fill_social() + labs(fill = "Dominance /nRank")
#go back to other tutorial and get normDS
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ggplot(ds_scores, aes(stab_cat, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
scale_fill_social() + labs(fill = "Dominance \nRank")
#go back to other tutorial and get normDS
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ggplot(ds_scores, aes(stab_cat, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
xlab("") + ylab("David's Score") +
scale_fill_social() + labs(fill = "Dominance \nRank")
#go back to other tutorial and get normDS
library(ggplot2)
library(cowplot)
library(see)
library(dplyr)
library(tidyr)
#tube test data
ranks_per_week <- read.csv("data/ranks_per_week.csv")
ranks_per_cage <- read.csv("data/ranks_per_cage.csv")
ranks_per_cage <- ranks_per_cage %>%
select(animal_id, rank) %>%
rename(cage_rank = rank)
inventory1 <- read.csv("data/animal_inventory1.csv")
sex_id1 <- inventory1 %>%
select(animal_id, sex)
ranks_per_week <- left_join(ranks_per_week, sex_id1, by = "animal_id")
ranks_per_week <- left_join(ranks_per_week, ranks_per_cage, by = "animal_id")
#subset males and females
males <- filter(ranks_per_week, sex == "Male")
females <- filter(ranks_per_week, sex == "Female")
male_plot <- ggplot(males, aes(day, rank, group = animal_id, color = as.factor(cage_rank), label = animal_id)) +
geom_line(linewidth = 1, aes(y=jitter(rank, .5))) +
scale_x_discrete(labels = c("d1" = 1, "d2" = 2, "d3" = 3), expand = c(0,0)) +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon"), expand = c(0,0)) +
scale_color_social() + guides(colour="none") +
ggtitle("Males") +
xlab("Week") + ylab("") +
theme_minimal_vgrid()
female_plot <- ggplot(females, aes(day, rank, group = animal_id, color = as.factor(cage_rank), label = animal_id)) +
geom_line(linewidth = 1, aes(y=jitter(rank, .5))) +
scale_x_discrete(labels = c("d1" = 1, "d2" = 2, "d3" = 3), expand = c(0,0)) +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon"), expand = c(0,0)) +
scale_color_social() + guides(colour="none") +
ggtitle("Females") +
xlab("Week") + ylab("") +
theme_minimal_vgrid()
#make stability dataset
stability <- ranks_per_week %>%
select(cage_id, animal_id, sex, cage_rank, day, rank) %>%
pivot_wider(names_from = day, values_from = rank) %>%
mutate(stability = case_when(
d1 == d2 & d2 == d3 ~ "stable",
d1 != d2 ~ "unstable",
d1 != d3 ~ "unstable",
d2 != d3 ~ "unstable"
)) %>%
filter(stability == "stable")
#make stability histograms of only stable animals
males <- stability %>%
filter(sex == "Male")
females <- stability %>%
filter(sex == "Female")
male_hist <- ggplot(males, aes(cage_rank)) +
geom_bar() +
geom_hline(yintercept = 1:7,
color = "white", linewidth = 1) +
scale_x_reverse() + coord_flip() +
xlab("") + ylab("")+
theme_nothing()
female_hist <- ggplot(females, aes(cage_rank)) +
geom_bar() +
geom_hline(yintercept = 1:7,
color = "white", linewidth = 1) +
scale_x_reverse() + coord_flip() +
theme_nothing()
#geom_hline, removes the need for an axis, just make sure that the number of lines (e.g. 1:7) is equal to the highest number of animals for a specific rank. In this case, there were 7 female alphas that remained stable.
#plot everything in panels
plot_grid(male_plot, male_hist, female_plot + theme(axis.text.y = element_blank()), female_hist, ncol = 4, align = "h", rel_widths = c(1.2, .2, 1, .2))
ggplot(ranks_per_week, aes(day, rank, group = animal_id, color = sex)) +
geom_line() +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon")) +
scale_color_social() +
facet_wrap(~cage_id)
stability_categories <- data.frame(
cage_id = c(38, 41, 47, 50, 74, 77, 86, 110, 113, 119, 122, 146, 149, 155, 158, 173, 176, 182, 185),
stab_cat = c("unstable alpha", "unstable alpha", "double despotic", "despotic", "unstable alpha", "stable transitive", "despotic", "despotic", "despotic", "unstable alpha", "double despotic", "despotic", "despotic", "despotic", "despotic", "double despotic", "stable transitive", "despotic", "despotic")
)
ranks_per_week <- left_join(ranks_per_week, stability_categories, by = "cage_id")
ggplot(ranks_per_week, aes(day, rank, group = animal_id, color = stab_cat)) +
geom_line() +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon")) +
scale_color_social() +
labs(color = "Stability \nCategory") +
facet_wrap(~cage_id)
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ggplot(ds_scores, aes(stab_cat, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
xlab("") + ylab("David's Score") +
scale_fill_social() + labs(fill = "Dominance \nRank")
#go back to other tutorial and get normDS
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ggplot(ds_scores, aes(stab_cat, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
xlab("") + ylab("David's Score") +
scale_fill_social() + labs(fill = "Dominance \nRank")
#go back to other tutorial and get normDS
ggplot(ranks_per_week, aes(day, rank, group = animal_id, color = sex)) +
geom_line() +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon")) +
scale_color_social() +
facet_wrap(~cage_id) + theme_cowplot()
stability_categories <- data.frame(
cage_id = c(38, 41, 47, 50, 74, 77, 86, 110, 113, 119, 122, 146, 149, 155, 158, 173, 176, 182, 185),
stab_cat = c("unstable alpha", "unstable alpha", "double despotic", "despotic", "unstable alpha", "stable transitive", "despotic", "despotic", "despotic", "unstable alpha", "double despotic", "despotic", "despotic", "despotic", "despotic", "double despotic", "stable transitive", "despotic", "despotic")
)
ranks_per_week <- left_join(ranks_per_week, stability_categories, by = "cage_id")
ggplot(ranks_per_week, aes(day, rank, group = animal_id, color = stab_cat)) +
geom_line() +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon")) +
scale_color_social() +
labs(color = "Stability \nCategory") +
facet_wrap(~cage_id) + theme_cowplot()
#tube test data
ranks_per_week <- read.csv("data/ranks_per_week.csv")
ranks_per_cage <- read.csv("data/ranks_per_cage.csv")
ranks_per_cage <- ranks_per_cage %>%
select(animal_id, rank) %>%
rename(cage_rank = rank)
inventory1 <- read.csv("data/animal_inventory1.csv")
sex_id1 <- inventory1 %>%
select(animal_id, sex)
ranks_per_week <- left_join(ranks_per_week, sex_id1, by = "animal_id")
ranks_per_week <- left_join(ranks_per_week, ranks_per_cage, by = "animal_id")
#subset males and females
males <- filter(ranks_per_week, sex == "Male")
females <- filter(ranks_per_week, sex == "Female")
male_plot <- ggplot(males, aes(day, rank, group = animal_id, color = as.factor(cage_rank), label = animal_id)) +
geom_line(linewidth = 1, aes(y=jitter(rank, .5))) +
scale_x_discrete(labels = c("d1" = 1, "d2" = 2, "d3" = 3), expand = c(0,0)) +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon"), expand = c(0,0)) +
scale_color_social() + guides(colour="none") +
ggtitle("Males") +
xlab("Week") + ylab("") +
theme_minimal_vgrid()
female_plot <- ggplot(females, aes(day, rank, group = animal_id, color = as.factor(cage_rank), label = animal_id)) +
geom_line(linewidth = 1, aes(y=jitter(rank, .5))) +
scale_x_discrete(labels = c("d1" = 1, "d2" = 2, "d3" = 3), expand = c(0,0)) +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon"), expand = c(0,0)) +
scale_color_social() + guides(colour="none") +
ggtitle("Females") +
xlab("Week") + ylab("") +
theme_minimal_vgrid()
#make stability dataset
stability <- ranks_per_week %>%
select(cage_id, animal_id, sex, cage_rank, day, rank) %>%
pivot_wider(names_from = day, values_from = rank) %>%
mutate(stability = case_when(
d1 == d2 & d2 == d3 ~ "stable",
d1 != d2 ~ "unstable",
d1 != d3 ~ "unstable",
d2 != d3 ~ "unstable"
)) %>%
filter(stability == "stable")
#make stability histograms of only stable animals
males <- stability %>%
filter(sex == "Male")
females <- stability %>%
filter(sex == "Female")
male_hist <- ggplot(males, aes(cage_rank)) +
geom_bar() +
geom_hline(yintercept = 1:7,
color = "white", linewidth = 1) +
scale_x_reverse() + coord_flip() +
xlab("") + ylab("")+
theme_nothing()
female_hist <- ggplot(females, aes(cage_rank)) +
geom_bar() +
geom_hline(yintercept = 1:7,
color = "white", linewidth = 1) +
scale_x_reverse() + coord_flip() +
theme_nothing()
#geom_hline, removes the need for an axis, just make sure that the number of lines (e.g. 1:7) is equal to the highest number of animals for a specific rank. In this case, there were 7 female alphas that remained stable.
#plot everything in panels
plot_grid(male_plot, male_hist, female_plot + theme(axis.text.y = element_blank()), female_hist, ncol = 4, align = "h", rel_widths = c(1.2, .2, 1, .2))
stability_categories <- data.frame(
cage_id = c(38, 41, 47, 50, 74, 77, 86, 110, 113, 119, 122, 146, 149, 155, 158, 173, 176, 182, 185),
stab_cat = c("unstable alpha", "unstable alpha", "double despotic", "despotic", "unstable alpha", "stable transitive", "despotic", "despotic", "despotic", "unstable alpha", "double despotic", "despotic", "despotic", "despotic", "despotic", "double despotic", "stable transitive", "despotic", "despotic")
)
ranks_per_week <- left_join(ranks_per_week, stability_categories, by = "cage_id")
ggplot(ranks_per_week, aes(day, rank, group = animal_id, color = stab_cat)) +
geom_line() +
scale_y_reverse(breaks = c(1,2,3,4,5), labels = c("Alpha", "Beta", "Gamma", "Delta", "Epsilon")) +
scale_color_social() +
labs(color = "Stability \nCategory") +
facet_wrap(~cage_id) + theme_cowplot()
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ggplot(ds_scores, aes(stab_cat, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
xlab("") + ylab("David's Score") +
scale_fill_social() + labs(fill = "Dominance \nRank") + theme_cowplot()
ggplot(ds_scores, aes(stab_cat, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
xlab("") + ylab("David's Score") +
scale_fill_social() + labs(fill = "Dominance \nRank") + theme_cowplot() +
facet_wrap(~cage_id)
ggplot(ds_scores, aes(cage_id, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
xlab("") + ylab("David's Score") +
scale_fill_social() + labs(fill = "Dominance \nRank") + theme_cowplot() +
facet_wrap(~stab_cat)
ggplot(ds_scores, aes(as.factor(cage_id), ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
xlab("") + ylab("David's Score") +
scale_fill_social() + labs(fill = "Dominance \nRank") + theme_cowplot() +
facet_wrap(~stab_cat)
ggplot(ds_scores, aes(as.factor(cage_id), ds, fill = as.factor(cage_rank)))+
geom_point() +
xlab("") + ylab("David's Score") +
scale_fill_social() + labs(fill = "Dominance \nRank") + theme_cowplot() +
facet_wrap(~stab_cat)
ggplot(ds_scores, aes(as.factor(cage_id), ds, color = as.factor(cage_rank)))+
geom_point() +
xlab("") + ylab("David's Score") +
scale_fill_social() + labs(fill = "Dominance \nRank") + theme_cowplot() +
facet_wrap(~stab_cat)
ggplot(ds_scores, aes(as.factor(cage_id), ds, color = as.factor(cage_rank)))+
geom_point() +
xlab("") + ylab("David's Score") +
scale_color_social() + labs(fill = "Dominance \nRank") + theme_cowplot() +
facet_wrap(~stab_cat)
ggplot(ds_scores, aes(as.factor(cage_id), ds, color = as.factor(cage_rank)))+
geom_point() +
xlab("") + ylab("David's Score") +
scale_color_social() + labs(color = "Dominance \nRank") +
facet_wrap(~stab_cat) + theme_minimal_vgrid()
ggplot(ds_scores, aes(as.factor(cage_id), ds, color = as.factor(cage_rank)))+
geom_point() +
xlab("") + ylab("David's Score") +
scale_color_social() + labs(color = "Dominance \nRank") +
facet_wrap(~stab_cat) +
theme_minimal_vgrid() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#import data
ds_scores <- read.csv("data/ds_per_cage.csv")
ds_scores <- left_join(ds_scores, sex_id1, by = "animal_id")
ds_scores <- left_join(ds_scores, stability_categories, by = "cage_id")
ds_scores <- left_join(ds_scores, ranks_per_cage, by = "animal_id")
ggplot(ds_scores, aes(stab_cat, ds, fill = as.factor(cage_rank)))+
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.5, dotsize=1.2) +
xlab("") + ylab("David's Score") +
scale_fill_social() + labs(fill = "Dominance \nRank") + theme_cowplot()
